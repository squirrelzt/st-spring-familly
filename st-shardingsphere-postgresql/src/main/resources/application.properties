# MyBatis配置
#mybatis.mapper-locations=classpath:mapper/*.xml
#mybatis.config-location=classpath:mybatis-config.xml

mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# 配置真实数据源
#spring.shardingsphere.datasource.names=ds0,ds1

# 配置第 1 个数据源
#spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=org.postgresql.Driver
#spring.shardingsphere.datasource.ds0.url=jdbc:postgresql://192.168.2.106:5432/ds0
#spring.shardingsphere.datasource.ds0.username=postgres
#spring.shardingsphere.datasource.ds0.password=123456

# 配置第 2 个数据源
#spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=org.postgresql.Driver
#spring.shardingsphere.datasource.ds1.url=jdbc:postgresql://192.168.2.106:5433/ds1
#spring.shardingsphere.datasource.ds1.username=postgres
#spring.shardingsphere.datasource.ds1.password=123456

# 配置 t_order 表规则
#spring.shardingsphere.rules.sharding.tables.t_person.actual-data-nodes=ds$->{0..1}.t_person_$->{0..1}

# 配置分库策略
#spring.shardingsphere.rules.sharding.tables.t_person.database-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.tables.t_person.database-strategy.standard.sharding-algorithm-name=database_inline

# 配置分表策略
#spring.shardingsphere.rules.sharding.tables.t_person.table-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.tables.t_person.table-strategy.standard.sharding-algorithm-name=table_inline


# 数据源配置
#sharding.jdbc.datasource.names=ds0,ds1,ds2
#sharding.jdbc.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds0.driver-class-name=org.postgresql.Driver
#sharding.jdbc.datasource.ds0.url=jdbc:postgresql://192.168.2.106:5432/ds0
#sharding.jdbc.datasource.ds0.username=postgres
#sharding.jdbc.datasource.ds0.password=123456

#sharding.jdbc.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds1.driver-class-name=org.postgresql.Driver
#sharding.jdbc.datasource.ds1.url=jdbc:postgresql://192.168.2.106:5433/ds1
#sharding.jdbc.datasource.ds1.username=postgres
#sharding.jdbc.datasource.ds1.password=123456

#sharding.jdbc.datasource.ds2.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds2.driver-class-name=org.postgresql.Driver
#sharding.jdbc.datasource.ds2.url=jdbc:postgresql://192.168.2.106:5434/ds2
#sharding.jdbc.datasource.ds2.username=postgres
#sharding.jdbc.datasource.ds2.password=123456

# 配置 t_order 表规则
#spring.shardingsphere.rules.sharding.tables.t_person.actual-data-nodes=ds$->{0..2}.t_person_$->{0..2}


# 配置分库策略
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=database_inline

# 配置分表策略
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=table_inline

# 配置分库策略
#spring.shardingsphere.rules.sharding.tables.t_person.database-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.tables.t_person.database-strategy.standard.sharding-algorithm-name=database_inline

# 配置分表策略
#spring.shardingsphere.rules.sharding.tables.t_person.table-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.tables.t_person.table-strategy.standard.sharding-algorithm-name=table_inline

# 配置 分片算法
#spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.props.algorithm.expression=ds_${id % 3}
#spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.props.algorithm.expression=t_person_${id % 3}
#sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
#sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds${user_id % 2}

# 分库算法 user_info，多库分表
# 单库内没有分表，注释了分表策略
#sharding.jdbc.config.sharding.tables.user_info.actual-data-nodes=ds$->{0..1}.user_info
#sharding.jdbc.config.sharding.tables.user_info.databaseStrategy.inline.shardingColumn=user_id
#sharding.jdbc.config.sharding.tables.user_info.databaseStrategy.inline.algorithm-expression=ds${user_id % 2}
###sharding.jdbc.config.sharding.tables.user_info.databaseStrategy.standard.shardingColumn=user_id
###sharding.jdbc.config.sharding.tables.user_info.databaseStrategy.standard.preciseAlgorithmClassName=com.gupaoedu.config.DBShardAlgo
###sharding.jdbc.config.sharding.tables.user_info.tableStrategy.standard.shardingColumn=user_id
###sharding.jdbc.config.sharding.tables.user_info.tableStrategy.standard.preciseAlgorithmClassName=com.gupaoedu.config.TblPreShardAlgo
###sharding.jdbc.config.sharding.tables.user_info.tableStrategy.standard.rangeAlgorithmClassName=com.gupaoedu.config.TblRangeShardAlgo
##sharding.jdbc.config.sharding.tables.user_info.table-strategy.inline.sharding-column=user_id
##sharding.jdbc.config.sharding.tables.user_info.table-strategy.inline.algorithm-expression=user_info

# 分库算法 t_order 多库分表
#sharding.jdbc.config.sharding.tables.t_order.databaseStrategy.inline.shardingColumn=order_id
#sharding.jdbc.config.sharding.tables.t_order.databaseStrategy.inline.algorithm-expression=ds${order_id % 2}
#sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order

# 分库算法 t_order_item 多库分表
#sharding.jdbc.config.sharding.tables.t_order_item.databaseStrategy.inline.shardingColumn=order_id
#sharding.jdbc.config.sharding.tables.t_order_item.databaseStrategy.inline.algorithm-expression=ds${order_id % 2}
#sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item

# 绑定表规则列表，防止关联查询出现笛卡尔积
#sharding.jdbc.config.sharding.binding-tables[0]=t_order,t_order_item

# 广播表
#sharding.jdbc.config.sharding.broadcast-tables=t_config